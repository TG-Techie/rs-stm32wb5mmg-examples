[36m[01m      -------------------------------------------------------------------
[39;49m[36m[01m                        STM32CubeProgrammer v2.15.0                  
[39;49m[36m[01m      -------------------------------------------------------------------

[39;49m[90m
Usage : 
[39;49m[90mSTM32_Programmer_CLI.exe [command_1] [Arguments_1][[command_2] [Arguments_2]...] 

[39;49m[00;32mGeneric commands:

[39;49m[39;49m -?, -h, --help         : Show this help
[39;49m[39;49m -c,     --connect      : Establish connection to the device
[39;49m[39;49m     <port=<PortName>   : Interface identifier. ex COM1, /dev/ttyS0, usb1,
[39;49m[39;49m                          JTAG, SWD...)
[39;49m[90m    USB port optional parameters:  
[39;49m[39;49m     [sn=<serialNumber>]   : Serial number of the usb dfu
[39;49m[39;49m     [PID=<Product ID>]    : Product ID. ex: 0xA38F, etc, default 0xDF11
[39;49m[39;49m     [VID=<Vendor ID>]     : Vendor ID. ex: 0x0389, etc, default x0483
[39;49m[90m    UART port optional parameters:  
[39;49m[39;49m     [br=<baudrate>]    : Baudrate. ex: 115200, 9600, etc, default 115200
[39;49m[39;49m     [P=<parity>]       : Parity bit, value in {NONE,ODD,EVEN}, default EVEN
[39;49m[39;49m     [db=<data_bits>]   : Data bit, value in {6, 7, 8} ..., default 8
[39;49m[39;49m     [sb=<stop_bits>]   : Stop bit, value in {1, 1.5, 2} ..., default 1
[39;49m[39;49m     [fc=<flowControl>] : Flow control 
[39;49m[39;49m                          Value in {OFF,Hardware,Software} ..., default OFF
[39;49m[39;49m     rts=<status>       : low or high
[39;49m[39;49m     dtr=<status>       : low or high
[39;49m[39;49m                          Not supported for STM32MP
[39;49m[39;49m     [noinit=noinit_bit]: Set No Init bits, value in {0,1} ..., default 0
[39;49m[39;49m     [console]          : Enter UART console mode
[39;49m[90m    JTAG/SWD debug port optional parameters:  
[39;49m[39;49m     [freq=<frequency>] : Frequency in KHz. Default frequencies: 
[39;49m[39;49m                          4000 SWD 9000 JTAG with STLINKv2
[39;49m[39;49m                          24000 SWD 21333 with STLINKv3
[39;49m[39;49m     [index=<index>]    : Index of the debug probe. default index 0
[39;49m[39;49m     [sn=<serialNumber>]: Serial Number of the debug probe
[39;49m[39;49m     [ap=<accessPort>]  : Access Port index to connect to. default ap 0
[39;49m[39;49m     [mode=<mode>]      : Connection mode. Value in {UR/HOTPLUG/NORMAL/POWERDOWN}
[39;49m[39;49m                          default mode: NORMAL
[39;49m[39;49m     [reset=<mode>]     : Reset modes: SWrst/HWrst/Crst. Default mode: SWrst
[39;49m[39;49m                          Reset mode with UR connection mode is HWrst
[39;49m[39;49m     [shared]           : Enable shared mode allowing connection of two or more
[39;49m[39;49m                          instances of STM32CubeProgrammer or other debugger
[39;49m[39;49m                          to the same ST-LINK probe.
[39;49m[39;49m     [tcpport=<Port>]   : Port used for running ST-Link Server, default 7184
[39;49m[39;49m     [LPM]              : Enable debug in Low Power mode(default mode)
[39;49m[39;49m     [dLPM]             : Disable debug in Low Power mode
[39;49m[39;49m     [getAuthID]        : Get device identification (Option only for STM32U5 series)
[39;49m[39;49m     [speed=<Reliable/fast>]: Choose flashing  Reliable/fast (Option only for STM32U5 series)
[39;49m[90m    SPI port optional parameters:  
[39;49m[39;49m     [br=<baudrate>]    : Baudrate.
[39;49m[39;49m     [cpha=<cpha_val>]  : 1Edge or 2Edge. default 1Edge
[39;49m[39;49m     [cpol=<cpol_val>]  : low or high
[39;49m[39;49m     [crc=<crc_val>]    : enable or disable (0/1).
[39;49m[39;49m     [crcpol=<crc_pol>] : crc polynom value.
[39;49m[39;49m     [datasize=<size>]  : 8bit/16bit
[39;49m[39;49m     [direction=<val>]  : Direction: 2LFullDuplex/2LRxOnly/1LRx/1LTx
[39;49m[39;49m     [firstbit=<val>]   : First Bit: MSB/LSB
[39;49m[39;49m     [frameformat=<val>]: Frame Format: Motorola/TI
[39;49m[39;49m     [mode=<val>]       : Mode: master/slave
[39;49m[39;49m     [nss=<val>]        : NSS: soft/hard
[39;49m[39;49m     [nsspulse=<val>]   : NSS pulse: Pulse/NoPulse
[39;49m[39;49m     [delay=<val>]      : Delay: Delay/NoDelay, delay of few microseconds
[39;49m[39;49m     [noinit=noinit_bit]: Set No Init bits, value in {0,1} ..., default 0
[39;49m[90m    CAN port optional parameters:  
[39;49m[39;49m     [br=<rbaudrate>]   : Baudrate : 125, 250, 500, 1000 Kbps, default 125
[39;49m[39;49m     [mode=<canmode>]   : CAN Mode : NORMAL, LOOPBACK..., default NORMAL
[39;49m[39;49m     [ide=<type>]       : CAN Type : STANDARD or EXTENDED, default STANDARD
[39;49m[39;49m     [rtr=<format>]     : Frame Format: DATA or REMOTE, default DATA
[39;49m[39;49m     [fifo=<afifo>]     : Msg Receive : FIFO0 or FIFO1, default FIFO0
[39;49m[39;49m     [fm=<fmode]        : Filter Mode : MASK or LIST, default MASK
[39;49m[39;49m     [fs=<fscale>]      : Filter Scale: 16 or 32, default 32
[39;49m[39;49m     [fe=<fenable>]     : Filter Activation : ENABLE or DISABLE, default ENABLE
[39;49m[39;49m     [fbn=<fbanknb>]    : Filter Bank Number : 0 to 13, default 0
[39;49m[39;49m     [noinit=noinit_bit]: Set No Init bits, value in {0,1} ..., default 0
[39;49m[90m    I2C port optional parameters:  
[39;49m[39;49m     [add=<ownadd>]     : Slave address : address in hex format
[39;49m[39;49m     [br=<sbaudrate>]   : Baudrate : 100 or 400 Kbps, default 400
[39;49m[39;49m     [sm=<smode>]       : Speed Mode : STANDARD or FAST, default FAST
[39;49m[39;49m     [am=<addmode>]     : Address Mode : 7 or 10 bits, default 7
[39;49m[39;49m     [af=<afilter>]     : Analog filter : ENABLE or DISABLE, default ENABLE
[39;49m[39;49m     [df=<dfilter>]     : Digital filter : ENABLE or DISABLE, default DISABLE
[39;49m[39;49m     [dnf=<dnfilter>]   : Digital noise filter : 0 to 15, default 0
[39;49m[39;49m     [rt=<rtime>]       : Rise time : 0-1000(STANDARD), 0-300(FAST), default 0
[39;49m[39;49m     [ft=<ftime>]       : Fall time : 0-300 (STANDARD), 0-300(FAST), default 0
[39;49m[39;49m     [noinit=noinit_bit]: Set No Init bits, value in {0,1} ..., default 0
[39;49m[39;49m -version, --version    : Displays the tool's version
[39;49m[39;49m -l,     --list         : List all available communication interfaces
[39;49m[39;49m     <uart>             : UART interface
[39;49m[39;49m     <usb>              : USB interface
[39;49m[39;49m     <st-link>          : st-link interface
[39;49m[39;49m     <stlink>           
[39;49m[39;49m     <st-link-only>     : Enumarte st-link list without connecting and intruse the target
[39;49m[39;49m     <stlink-only>        Access port number is set to zero.
[39;49m[39;49m     <shared>           : Allowing to list all boards connected to other instance(s)
[39;49m[39;49m     <stlink-shared>      of STM32CubeProgrammer where the shared mode is enabled.
[39;49m[39;49m -q,     --quietMode    : Enable quiet mode. No progress bar displayed
[39;49m[39;49m -log,   --log          : Store the detailed output in log file
[39;49m[39;49m     [<file_Path.log>]  : Path of the log file,
[39;49m[39;49m                          default path = $HOME/.STM32Programmer/trace.log
[39;49m[39;49m -vb,    --verbosity    : Specify verbosity level
[39;49m[39;49m     <Level>            : Verbosity level, value in {1, 2, 3}
[39;49m[39;49m -y, --yes              : Ignore confirmation prompt message
[39;49m[00;32m
Available commands for STM32 MCU:

[39;49m[39;49m --skipErase            : Skip sector erase before programming
[39;49m[39;49m -sl,    --safelib      : Add a segment into a firmware file (elf,bin
[39;49m[39;49m                          hex,srec and s19) containing computed CRC values
[39;49m[39;49m                          To use only with the safety lib component
[39;49m[39;49m     <file_path>        : File path to be modified
[39;49m[39;49m     <start_address>    : Flash memory start address
[39;49m[39;49m     <end_address>      : Flash memory end address
[39;49m[39;49m     <slice_size>       : Size of data per CRC value
[39;49m[39;49m     <pattern>          : Optional pattern from 0x0 to 0xFF. Default pattern 0x00
[39;49m[39;49m -ms,    --mergesbsfu   : Add a binary header and a sbsfu segment to an elf file
[39;49m[39;49m     <elf_file_path>    : File path to be modified
[39;49m[39;49m     <header_file_path> : Header file path
[39;49m[39;49m     <sbsfu_file_path>  : SBSFU file path
[39;49m[39;49m -e,     --erase        : Erase memory pages/sectors devices: 
[39;49m[39;49m                          Not supported for STM32MP
[39;49m[39;49m     [all]              : Erase all sectors
[39;49m[39;49m     [<sectorsCodes>]   : Erase the specified sectors identified by sectors
[39;49m[39;49m                          codes. ex: 0, 1, 2 to erase sectors 0, 1 and 2
[39;49m[39;49m                          for EEPROM : ed1 & ed2  
[39;49m[39;49m     [<[start end]>]    : Erase the specified sectors starting from
[39;49m[39;49m                          start code to end code, ex: -e [5 10]
[39;49m[39;49m -w,     --write            
[39;49m[39;49m -d,     --download     : Download the content of a file into device memory
[39;49m[39;49m     <file_path>        : File path name to be downloaded: (bin, hex, srec, s19
[39;49m[39;49m                          elf, stm32 or tsv file)
[39;49m[39;49m     [<address>]        : Start address of download
[39;49m[39;49m -w64                   : Write a 64-bits data into device memory
[39;49m[39;49m     <address>          : Start address of download
[39;49m[39;49m     <64-bit_data>      : 64-bit data to be downloaded
[39;49m[39;49m                          values should not be separated by space
[39;49m[39;49m -w32                   : Write a 32-bits data into device memory
[39;49m[39;49m     <address>          : Start address of download
[39;49m[39;49m     <32-bit_data>      : 32-bit data to be downloaded
[39;49m[39;49m                          values should be separated by space
[39;49m[39;49m -w16                   : Write a 16-bits data into device memory
[39;49m[39;49m     <address>          : Start address of download
[39;49m[39;49m     <16-bit_data>      : 16-bit data to be downloaded
[39;49m[39;49m                          values should be separated by space
[39;49m[39;49m -w8                    : Write a 8-bits data into device memory
[39;49m[39;49m     <address>          : Start address of download
[39;49m[39;49m     <8-bit_data>       : 8-bit data to be downloaded
[39;49m[39;49m                          values should be separated by space
[39;49m[39;49m -v,     --verify       : Verify if the programming operation is achieved 
[39;49m[39;49m                          successfully
[39;49m[39;49m -nv,    --noverify     : Do not verify if the programming operation is achieved 
[39;49m[39;49m                          successfully, used with -w32/-w16/-w8 commands
[39;49m[39;49m -checksum, --checksum  : Memory checksum calculation
[39;49m[39;49m     <address>          : Optional, Start address
[39;49m[39;49m     <size>             : Optional, Size of memory region
[39;49m[39;49m                        : If the parameters <address> and <size> are not indicated, the tool will calculate the full internal Flash
[39;49m[39;49m -r32                   : Read a 32-bit data from device memory
[39;49m[39;49m     <address>          : Read start address
[39;49m[39;49m     <size>             : Size of data
[39;49m[39;49m -r16                   : Read a 16-bit data from device memory
[39;49m[39;49m     <address>          : Read start address
[39;49m[39;49m     <size>             : Size of data
[39;49m[39;49m -r8                    : Read a 8-bit data from device memory
[39;49m[39;49m     <address>          : Read start address
[39;49m[39;49m     <size>             : Size of data
[39;49m[39;49m -rst                   : Reset system
[39;49m[39;49m -hardRst               : Hardware reset
[39;49m[39;49m                          Available only with JTAG/SWD debug port
[39;49m[39;49m -halt                  : Halt core
[39;49m[39;49m -run                   : Run core
[39;49m[39;49m -step                  : Step core
[39;49m[39;49m                          Available only with JTAG/SWD debug port
[39;49m[39;49m -score                 : Get core status
[39;49m[39;49m                          Available only with JTAG/SWD debug port
[39;49m[39;49m -coreReg               : Read/Write core registers
[39;49m[39;49m     [<core_register>]    R0/../R15/PC/LR/PSP/MSP/XPSR/APSR/IPSR/EPSR/
[39;49m[39;49m                          PRIMASK/BASEPRI/FAULTMASK/CONTROL
[39;49m[39;49m     [core_reg=<value>]   value in case of write opration
[39;49m[39;49m                          Note: multiple registers can be handled at once
[39;49m[39;49m                          Available only with JTAG/SWD debug port
[39;49m[39;49m -r,     --read         
[39;49m[39;49m -u,     --upload       : Upload the device memory content to a .bin/.hex/.srec/.s19 file
[39;49m[39;49m     <address>          : Start address of read and upload
[39;49m[39;49m     <size>             : Size of memory content to be read
[39;49m[39;49m     <file_path>        : file path with .bin/.hex/.srec/.s19 extension

[39;49m[39;49m -el,     --extload     : Select a custom external memory-loader for JTAG/SWD
[39;49m[39;49m     <file_path>        : External memory-loader file path 
[39;49m[39;49m -elbl,   --extloadbl   : Select a custom external memory-loader for Bootloader interface (SFIx only)
[39;49m[39;49m     <file_path>        : External memory-loader file path 
[39;49m[39;49m -s,     --start          
[39;49m[39;49m -g,     --go           : Run the code at the specified address.
[39;49m[39;49m     [<address>]        : Start address
[39;49m[39;49m -rdu,   --readunprotect: Remove memory's Read Protection by shifting the RDP
[39;49m[39;49m                          level from level 1 to level 0.

[39;49m[39;49m -tzenreg,   --tzenregression: Remove TrustZone Protection by disabling the TZEN
[39;49m[39;49m                           from 1 to 0.

[39;49m[39;49m -ob,    --optionbytes  : This command allows the user to manipulate the device
[39;49m[39;49m                          's OptionBytes by displaying or modifying them.
[39;49m[39;49m      [displ]           : This option allows the user to display the whole set
[39;49m[39;49m                          of Option Bytes.
[39;49m[39;49m      [unlockchip]      : This option allows the user to unlock the chip in case
[39;49m[39;49m                          of bad Option Bytes already programmed.
[39;49m[39;49m      [OptByte=<value>] : This option allows the user to program the given
[39;49m[39;49m                          Option Byte.

[39;49m[39;49m -force_no_da, --force_no_da 
[39;49m[39;49m                        : Froce OB programming if the DA is not already configured.
[39;49m[39;49m                          Available only for STM32H50x devices

[39;49m[39;49m -w32dbgmcu             : Write a 32-bits data into DBGMCU DBG AUTH HOST register
[39;49m[39;49m     <32-bit_data>        32-bit data to be downloaded, only for STM32H5xx devices.

[39;49m[39;49m -lockRDP1              : Lock RDP level 1
[39;49m[39;49m     <first_half>       : First 32-bit of password
[39;49m[39;49m     <second_half>      : Second 32-bit of password
[39;49m[39;49m -unlockRDP1            : Unlock RDP level 1
[39;49m[39;49m     <first_half>       : First 32-bit of password
[39;49m[39;49m     <second_half>      : Second 32-bit of password
[39;49m[39;49m -lockRDP2              : Lock RDP level 2
[39;49m[39;49m     <first_half>       : First 32-bit of password
[39;49m[39;49m     <second_half>      : Second 32-bit of password
[39;49m[39;49m -unlockRDP2            : Unlock RDP level 2
[39;49m[39;49m     <first_half>       : First 32-bit of password
[39;49m[39;49m     <second_half>      : Second 32-bit of password
[39;49m[39;49m -ssigfoxc              : Save the chip Certificate, 
[39;49m[39;49m                          supported for STM32WL devices
[39;49m[39;49m     <file_path>        : Certificate file path

[39;49m[39;49m -wsigfoxc              : Write the Sigfox credential, 
[39;49m[39;49m                          supported for STM32WL devices
[39;49m[39;49m     <file_path>        : Certificate file path (binary, header)
[39;49m[39;49m     <address>          : start address for write

[39;49m[39;49m -fillmemory            : Fill memory with the given pattern from the chosen address.
[39;49m[39;49m     <start_address>    : Start address for write. The address 0x08000000 is used by default
[39;49m[39;49m     [size=<value>]     : Size of the data to write
[39;49m[39;49m     [pattern=<value>]  : The pattern value to write.
[39;49m[39;49m     [dataWidth=8|16|32]: The filling data size:
[39;49m[39;49m                          8 bits is selected by default.
[39;49m[39;49m -blankcheck            : Verifies that the STM32 Flash memory is blank.
[39;49m[39;49m                          If the Flash memory is not blank, the first address with data is highlighted in a message.
[39;49m[39;49m -fchecksum, --file-checksum  : File checksum calculation 
[39;49m[39;49m     <file_path>              : File path

[39;49m[00;32mBeta commands: 

[39;49m[39;49m -regdump                     : Read and dump Core and MCU registers
[39;49m[39;49m     <file_path.log>          : Log file path
[39;49m[39;49m     [choice=<number>]        : Device number from the list of compatible devices (optional), this list
[39;49m[39;49m                                is displayed if the command is performed without this optional argument
[39;49m[39;49m -hf                          : Hard fault analyzer
[39;49m[39;49m                                Helps to identify system faults that occur when the CPU
[39;49m[39;49m                                is driven into a fault condition by the application code.

[39;49m[39;49m -pwr, --power                : Perform power ON/OFF, only for STLINK supporting this capability
[39;49m[39;49m     <on/off>                 : Select the power type
[39;49m[39;49m     [index=<number>]         : Index of the debug probe.
[39;49m[00;32mAvailable commands for STM32 MPU:

[39;49m[39;49m -c,     --connect      : Establish connection to the device
[39;49m[39;49m     <port=<PortName>   : Interface identifer. ex COM1, /dev/ttyS0, usb1)
[39;49m[90m    USB port optional parameters:  
[39;49m[39;49m     [sn=<serialNum>]   : Serial number of the usb dfu
[39;49m[39;49m     [serial]           : Activate USB serial Gadget for MPU devices
[39;49m[90m    UART port optional parameters:  
[39;49m[39;49m     [br=<baudrate>]    : Baudrate. ex: 115200, 9600, etc, default 115200
[39;49m[39;49m     [P=<parity>]       : Parity bit, value in {NONE,ODD,EVEN}, default NONE
[39;49m[39;49m     [db=<data_bits>]   : Data bit, value in {6, 7, 8} ..., default 8
[39;49m[39;49m     [sb=<stop_bits>]   : Stop bit, value in {1, 1.5, 2} ..., default 1
[39;49m[39;49m     [fc=<flowControl>] : Flow control (Not yet supported for STM32MP)
[39;49m[39;49m                          Value in {OFF,Hardware,Software} ..., default OFF
[39;49m[39;49m     [noinit=noinit_bit]: Set No Init bits, value in {0,1} ..., default 0
[39;49m[39;49m -s,     --start          
[39;49m[39;49m -g,     --go           : Run the code at the specified partition ID.
[39;49m[39;49m     [<partitionID>]    : Partition ID
[39;49m[39;49m                          If not specified, last loaded partition
[39;49m[39;49m                          will be started

[39;49m[39;49m     [<startAdress>]    : Start address
[39;49m[39;49m                          If not specified, last loaded segment address
[39;49m[39;49m     [<noack>]          : No acknowledgment required
[39;49m[39;49m                          If not specified, acknowledgment will be required

[39;49m[39;49m -detach                : Send detach command to DFU

[39;49m[39;49m -wb                    : Write blob 

[39;49m[39;49m     <blob_file_path>   : Blob file path
[39;49m[39;49m -pmic                  : Program PMIC NVM 

[39;49m[39;49m     <PMIC file_path>   : PMIC file_path
[39;49m[39;49m -gc, --getcertificate  : Get the chip Certificate, 
[39;49m[39;49m                          supported for devices with security features
[39;49m[39;49m     <file_path>        : Certificate file path into which the chip
[39;49m[39;49m                          certificate will be uploaded
[39;49m[39;49m     <tfa-ssp-path>     : Input TFA SSP signed firmware path. Used only with STM32MP devices

[39;49m[39;49m -p,     --phaseID      : Display the current partition ID to be loaded 

[39;49m[39;49m -w,     --write            
[39;49m[39;49m -d,     --download     : Download the content of a file into device memory
[39;49m[39;49m     <file_path>        : File path name to be downloaded: (bin, stm32 file
[39;49m[39;49m     <partition_id>     : Partition ID to be downloaded
[39;49m[39;49m -rp,    --readPart     : Upload a memory partion ID content to a .bin file
[39;49m[39;49m     <partionID>        : Partion to be read
[39;49m[39;49m     [<offset address>] : Offset address of read and upload
[39;49m[39;49m     <size>             : Size of partion content to be read
[39;49m[39;49m     <file_path>        : Binary file path 

[39;49m[39;49m -ssp, --ssp                  : Program an SSP file
[39;49m[39;49m     <ssp_file_path>          : SSP file path to be programmed, bin or ssp extension
[39;49m[39;49m     <ssp-fw-path>            : SSP signed firmware path
[39;49m[39;49m     [hsm=0|1]                : Set user option for HSM use
[39;49m[39;49m                                value in {0 (do not use HSM), 1 (use HSM)}
[39;49m[39;49m                                Default value : hsm=0
[39;49m[39;49m     <lic_path|slot=slotID>   : Path to the license file (if hsm=0)
[39;49m[39;49m                                or reader slot ID if HSM is used (hsm=1)
[39;49m[39;49m -tm                          : Force timeout
[39;49m[39;49m     <value>                  : Number of milliseconds
[39;49m[39;49m -rst                         : Reset USB device

[39;49m[00;32m  OTP structure v1 commands :
[39;49m[39;49m -otp displ             : This command allows the user to display all or parts
[39;49m[39;49m                          of the OTP structure
[39;49m[39;49m      [upper]           : Displays the loaded upper OTP shadow registers
[39;49m[39;49m                          values and status
[39;49m[39;49m      [lower]           : Displays the loaded lower OTP shadow registers
[39;49m[39;49m                          values and status
[39;49m[39;49m      [ctrl]            : Displays the loaded BSEC control registers

[39;49m[39;49m -otp program           : This command allows the user to program SAFMEM
[39;49m[39;49m                          memory by modifying the OTP words
[39;49m[39;49m      [wordID=<value>]  : This field contains the OTP word number
[39;49m[39;49m      [value=<value>]   : Loads value into the chosen OTP word
[39;49m[39;49m      [sha_rsl=<value>] : Loads value into the corresponding shadow read
[39;49m[39;49m                          sticky lock bit
[39;49m[39;49m      [sha_wsl=<value>] : Loads value into the corresponding shadow write
[39;49m[39;49m                          sticky lock bit
[39;49m[39;49m      [sl=<value>]      : Loads value into the corresponding programming sticky
[39;49m[39;49m                          lock bit
[39;49m[39;49m      [pl=<value>]      : Loads value into the corresponding programming perma-
[39;49m[39;49m                          nent lock bit

[39;49m[39;49m -otp fwrite            : This command allows to program a binary file
[39;49m[39;49m      [lock]            : {Optional} indicate the operation type, update or permanent lock
[39;49m[39;49m      <bin_path>        : Binary file path, 32-bits aligned data
[39;49m[39;49m      [wordid=<id>]     : OTP word number in hex/dec format, start word of program 

[39;49m[00;32m  OTP structure v2 commands :
[39;49m[39;49m -otp displ             : This command allows the user to display all or parts
[39;49m[39;49m                          of the OTP structure
[39;49m[39;49m      [word=<id>]       : {Optional} display a specific OTP registers {values and status}
[39;49m[39;49m                          Up to 96 OTP words [0 to 95], id value in hex/dec format 

[39;49m[39;49m -otp write             : This command allows to fuse or update OTP words
[39;49m[39;49m                          Up to 96 OTP words [0 to 95] at the same command line
[39;49m[39;49m      [lock]            : {Optional} indicate the operation type, update or permanent lock
[39;49m[39;49m      [word=<id>]       : This field contains the OTP word number in hex/dec format
[39;49m[39;49m      [value=<value>]   : Value to be written in hex format 

[39;49m[39;49m -otp lock              : This command allows to fuse permanently OTP words
[39;49m[39;49m                          Up to 96 OTP words [0 to 95] at the same command line
[39;49m[39;49m      [word=<id>]       : This field contains the OTP word number in hex/dec format 

[39;49m[39;49m -otp fwrite            : This command allows to program a binary file
[39;49m[39;49m      [lock]            : {Optional} indicate the operation type, update or permanent lock
[39;49m[39;49m      <bin_path>        : Binary file path, 32-bits aligned data
[39;49m[39;49m      [word=<id>]       : OTP word number in hex/dec format, start word of program 

[39;49m[00;32mMCU Secure programming specific commands: 

[39;49m[39;49m -installipmodule, --installipmodule : Install ip module file
[39;49m[39;49m     <file_path>               : Path of smu file to be programmed
[39;49m[39;49m     [hsm=0|1]                 : Set user option for HSM use
[39;49m[39;49m                                 value in {0 (do not use HSM), 1 (use HSM)}
[39;49m[39;49m                                 Default value : hsm=0
[39;49m[39;49m     <lic_path|slot=slotID>   : Path to the license file (if hsm=0)
[39;49m[39;49m                                or reader slot ID if HSM is used (hsm=1)
[39;49m[39;49m                               note that if it is the case of global license,
[39;49m[39;49m                               please use hsm  = 0 with license path.
[39;49m[39;49m     [<address>]              : Destination address of the smu module
[39;49m[39;49m -updateipmodule, --updateipmodule : update ip module. 
[39;49m[39;49m     <file_path>              : Path of SMU file containing the update.
[39;49m[39;49m     [<address>]              : Destination address of the smu module
[39;49m[39;49m -sfi, --sfi                  : Program an sfi file
[39;49m[39;49m     [<protocol=Ptype>]       : Protocol type to be used : static/live
[39;49m[39;49m                                Only static protocol is supported so far
[39;49m[39;49m                                Default value static
[39;49m[39;49m     <file_path>              : Path of sfi file to be programmed
[39;49m[39;49m     [hsm=0|1]                : Set user option for HSM use
[39;49m[39;49m                                value in {0 (do not use HSM), 1 (use HSM)}
[39;49m[39;49m                                Default value : hsm=0
[39;49m[39;49m     <lic_path|slot=slotID>   : Path to the SFI license file (if hsm=0)
[39;49m[39;49m                                or reader slot ID if HSM is used (hsm=1)
[39;49m[39;49m   [<licMod_path>|slot=slotID]: list of the integrated SMI license files paths
[39;49m[39;49m                                if HSM is not used (hsm=0)
[39;49m[39;49m                                Or readers slot IDs list if HSM is used (hsm=1)
[39;49m[39;49m                                Used only in combined case
[39;49m[39;49m                                the list order should correspond to
[39;49m[39;49m                                modules integration order within the SFI file

[39;49m[39;49m -ssfi, --ssfi                : Program an ssfi file
[39;49m[39;49m     <ssfi_file_path>              : Path of ssfi file to be programmed
[39;49m[39;49m     <rsse_file_path>              : RSSe file path

[39;49m[39;49m -smi, --smi                  : Program an smi file
[39;49m[39;49m     <protocol=Ptype>         : Protocol type to be used : static/live
[39;49m[39;49m                                Only static protocol is supported so far
[39;49m[39;49m                                Default value static
[39;49m[39;49m     <file_path>              : Path of smi file to be programmed
[39;49m[39;49m     [hsm=0|1]                : Set user option for HSM use
[39;49m[39;49m                                value in {0 (do not use HSM), 1 (use HSM)}
[39;49m[39;49m                                Default value : hsm=0
[39;49m[39;49m     [<address>]              : Destination address of the smi module
[39;49m[39;49m                                needed only for relocatable SMI
[39;49m[39;49m     <lic_path|slot=slotID>   : Path to the SMI license file (if hsm=0)
[39;49m[39;49m                                or reader slot ID if HSM is used (hsm=1)

[39;49m[39;49m -rsse, --rsse                : Set the RSSe file path, 
[39;49m[39;49m                                supported for devices with security extension
[39;49m[39;49m     <file_path>              : RSSe file path

[39;49m[39;49m -mcsv, --mcsv                : Set the MCSV file path indicating SFI's modules configuration
[39;49m[39;49m                                supported for STM32H5xx devices
[39;49m[39;49m     <file_path>              : MCSV file path with .mcsv extension

[39;49m[39;49m -a, --abort                  : This command allows the user
[39;49m[39;49m                                to clean a not properly finished process.
[39;49m[39;49m                                The currently ongoing operation will stop
[39;49m[39;49m                                and the system will return to idle state

[39;49m[39;49m -dsecurity                   : Disable the security for STM32WL
 
[39;49m[39;49m -setdefaultob                : Set default Option Bytes for STM32WL
 
[39;49m[39;49m -rssgetversion, --rssgetversion : get the version of RSS
[39;49m[00;32mHSM related commands:
[39;49m[39;49m -hsmgetinfo                : Read the HSM available information
[39;49m[39;49m     [slot=<SlotID>]        : Slot ID of the Smart Card Reader
[39;49m[39;49m                              Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m -hsmgetcounter             : Read the current value of the license counter
[39;49m[39;49m     [slot=<SlotID>]        : Slot ID of the Smart Card Reader
[39;49m[39;49m                              Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m -hsmgetfwid                : Read the Firmware/Module Identifier
[39;49m[39;49m     [slot=<SlotID>]        : Slot ID of the Smart Card Reader
[39;49m[39;49m                              Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m -hsmgetstatus              : Read the current card life-cycle state
[39;49m[39;49m     [slot=<SlotID>]        : Slot ID of the Smart Card Reader
[39;49m[39;49m                              Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m -hsmgetlicense             : Get a license for the current chip
[39;49m[39;49m                              if counter is not null
[39;49m[39;49m     <file_path>            : File path into which the received license
[39;49m[39;49m                              will be stored
[39;49m[39;49m     [slot=<SlotID>]        : Slot ID of the Smart Card Reader
[39;49m[39;49m                              Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m     [protocol=<Ptype>]     : Protocol type to be used : static/live
[39;49m[39;49m                              Only static protocol is supported so far
[39;49m[39;49m                              Default value static
[39;49m[39;49m     <tfa-ssp-path>         : Input TFA SSP signed firmware path. Used only for STM32MP devices

[39;49m[39;49m -hsmgetlicensefromcertifbin, -hsmglfcb : Get a license for the input certificate
[39;49m[39;49m                                          if counter is not null
[39;49m[39;49m     <certif_file_path.bin>             : Input certificate file path
[39;49m[39;49m     <license_file_path.bin>            : File path into which the received license
[39;49m[39;49m                                          will be stored
[39;49m[39;49m     [slot=<SlotID>]                    : Slot ID of the Smart Card Reader
[39;49m[39;49m                                          Default value: slot=1 (the PC integrated SC reader)
[39;49m[39;49m     [protocol=<Ptype>]                 : Protocol type to be used : static/live
[39;49m[39;49m                                          Only static protocol is supported so far
[39;49m[39;49m                                          Default value static

[39;49m[00;32mSTM32WBxx specific commands:

[39;49m[39;49m -getuid64              : Read the device UID
[39;49m[39;49m -fusgetstate           : Read the FUS state
[39;49m[39;49m -fusopgetversion       : Read the FUS Operator version
[39;49m[39;49m -antirollback          : Perform the antirollback operation (Only on Bootloader interface) 
[39;49m[39;49m -startfus              : Perform the startfus operation
[39;49m[00;32m  Firmware Upgrade commands:
[39;49m[39;49m -fwdelete              : Delete the BLE stack firmware
[39;49m[39;49m -fwupgrade             : Upgrade the BLE stack firmware or the FUS firmware
[39;49m[39;49m     <file_path>        : New firmware image file path
[39;49m[39;49m     <address>          : Start address of download
[39;49m[39;49m     [firstinstall=0|1] : 1 if it is a first install otherwise 0
[39;49m[39;49m                          optional, Default value: firstinstall=0
[39;49m[39;49m     [startstack=0|1]   : 1 to start the stack after the upgrade otherwise 0
[39;49m[39;49m                          optional, Default value: startstack=1
[39;49m[39;49m      -v                : Verify if the download operation is achieved 
[39;49m[39;49m                          successfully before starting upgrade
[39;49m[39;49m -startwirelessstack    : Start the wireless stack
[39;49m[00;32m  Key management commands:
[39;49m[39;49m -authkeyupdate         : Authentication key update
[39;49m[39;49m     <file_path>        : New authentication key file path.
[39;49m[39;49m                        : This is the public key generated by
[39;49m[39;49m                        : STM32TrustedPackageCreator using -sign command.
[39;49m[39;49m -authkeylock           : Authentication key lock
[39;49m[39;49m                        : Once locked, it's no longuer possible to change it
[39;49m[39;49m                        : using authkeyupdate command
[39;49m[39;49m -wusrkey               : Write user key
[39;49m[39;49m     <file_path>        : User key file path
[39;49m[39;49m     <keytype=1|2|3>    : User key type, values : 1, 2 or 3.
[39;49m[39;49m                        : 1 = simple key, 2 = master key, 3 = encrypted key.
[39;49m[00;32mSerial Wire Viewer specific commands:

[39;49m[39;49m -swv                       : Printf via SWO
[39;49m[39;49m     <freq=<frequency>>     : System Clock in MHz
[39;49m[39;49m     <portnumber=0-31|all>  : ITM port number, values : 0-31, or all for All ports
[39;49m[39;49m     [<file_Path.log>]      : Path of the SWV log file (optional),
[39;49m[39;49m                            : default path = $USER_HOME/STMicroelectronics/STM32Programmer/SWV_Log/swv.log
[39;49m[39;49m      -RA                   : Start the reception of swv automatically
[39;49m[39;49m -startswv                  :  Printf via SWO & Start the reception of swv automatically
[39;49m[00;32mScript Manager command:

[39;49m[39;49m -script                    : Start the execution of Script File
[39;49m[39;49m <file_Path.prg>            : Path of the script file (.prg)
[39;49m[00;32mProvisionning Command: 

[39;49m[39;49m -sdp                    : Start the OBKey Provisioning
[39;49m[39;49m <File_Path>             : OBKey File Path
[39;49m[00;32mProvisioning with password :

[39;49m[39;49m -pwd                    : Start Provisioning with password
[39;49m[39;49m value=<password_value>           : Password value
[39;49m[39;49m path=<password_path>             : location of password file to be used in Debug Authentication
[39;49m[00;32mDebug Authentication options: 

[39;49m[39;49m      [debugauth=<1|2>]               : to choose starting authentication(1) or discovery(2)
[39;49m[39;49m      [pwd=<password_file_path>]      : required in case of authentication with password
[39;49m[39;49m      [key=<key_file_path>]           : required in case of authentication with certificate
[39;49m[39;49m      [cert=<certificate_file_path>]  : required in case of authentication with certificate
[39;49m[39;49m      [per=<requested_permission>]    : required in case of authentication with certificate. Possible values are a/b/c/d/e/f/g/h : 
 
[39;49m[39;49m        (a) Full Regression 
        (b) Partial Regression 
        (c) Debug Secure L3 
        (d) Debug Secure L2 
        (e) Debug Secure L1 
        (f) Debug Non Secure L3 
        (g) Debug Non Secure L2 
        (h) Debug Non Secure L1 

[39;49m